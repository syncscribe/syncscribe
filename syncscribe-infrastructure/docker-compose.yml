services:
  ss-db:
    build: ./db
    container_name: 'ss_db'
    ports:
      - 5432:5432
    environment:
        POSTGRES_MULTIPLE_DATABASES: zitadel,idp,files,emails,syncscribe
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ss-net
    volumes:
      - ss-db:/var/lib/postgresql/data
  zitadel:
    restart: 'always'
    networks:
      - ss-net
    image: 'ghcr.io/zitadel/zitadel:latest'
    command: 'start-from-init --masterkey "MasterkeyNeedsToHave32Characters" --tlsMode disabled'
    environment:
      ZITADEL_DATABASE_POSTGRES_HOST: ss_db
      ZITADEL_DATABASE_POSTGRES_PORT: 5432
      ZITADEL_DATABASE_POSTGRES_DATABASE: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_USERNAME: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_PASSWORD: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE: disable
      ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME: postgres
      ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD: postgres
      ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE: disable
      ZITADEL_EXTERNALSECURE: false
    depends_on:
      ss-db:
        condition: 'service_healthy'
    ports:
      - '8080:8080'
  minio:
    image: minio/minio:RELEASE.2025-04-08T15-41-24Z
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ss-minio:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: curl --fail http://127.0.0.1:9000/minio/health/live || exit 1
    networks:
      - ss-net
  cache:
    image: redis:7.4.2
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - ss-cache:/data
networks:
  ss-net:
    driver: bridge
volumes:
  ss-db:
  ss-minio:
  ss-cache:
